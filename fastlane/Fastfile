# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.24.0"

default_platform :ios

platform :ios do
  # desc "Runs all the tests"
  # lane :test do
  #   scan
  # end

  desc "Submit a new Beta Build to HockeyApp"
  lane :beta do
    next if ENV["TRAVIS_PULL_REQUEST"] != "false" or ENV["TRAVIS_BRANCH"] != "beta"

    keychain_name = "YumiMediationSDKExample-certs"
    keychain_password = SecureRandom.base64

    create_keychain(
      name: keychain_name,
      default_keychain: true,
      unlock: true,
      password: keychain_password,
      timeout: 3600
    )

    import_certificate(
      log_output: true,
      certificate_path: "fastlane/Certificates/ZplayAds_Distribute.p12",
      certificate_password: ENV["KEY_PASSWORD"],
      keychain_name: keychain_name,
      keychain_password: keychain_password
    )

    # Fetch provisioning file
    # sigh(
    #   adhoc: true,
    #   username: "weienios@zplay.cn",
    #   team_id: "VG25A6M88T",
    #   provisioning_name: "YumiMediationSDKDemo",
    #   cert_owner_name: "haiying wang"
    # )

    increment_build_number_in_plist(target: 'YumiMediationSDKDemo')
    increment_version_number_in_plist(
    target: 'YumiMediationSDKDemo',
    version_number: "3.2.7"
    )

    # Build
    gym(
      scheme: "YumiMediationSDKDemo",
      workspace: "YumiMediationSDKDemo.xcworkspace",
      configuration: "Release",
      clean: true,
      include_bitcode: false,
      include_symbols: true,
      export_method: "enterprise"
    )

    # Push to pgyer
    pgyer(
      api_key: "9a57e69885455c0dd7c80c02f6d438a5", 
      user_key: "542c17f75a2e4ab32af8ad236fbd6739",
      update_description: "update by fastlane"
    )

    # Push to HockeyApp
    hockey(
      api_token: "e4b2db23aced4eb7abbe540b925f64ec",
      public_identifier: 'b1ec3f8648fb479f9c4666c4edc97004',
      notify: "1",
      status: "2",
      commit_sha: ENV["TRAVIS_COMMIT"],
      notes: ENV["TRAVIS_COMMIT_MESSAGE"],
    )

    delete_keychain(
      name: keychain_name
    )

  end

  # desc "Deploy a new version to the App Store"
  # lane :release do
  #   # match(type: "appstore")
  #   # snapshot
  #   gym # Build your app - more options available
  #   deliver(force: true)
  #   # frameit
  # end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
